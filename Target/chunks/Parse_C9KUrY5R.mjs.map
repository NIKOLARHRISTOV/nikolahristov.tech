{"version":3,"file":"Parse_C9KUrY5R.mjs","sources":["../../Source/Function/Parse.ts"],"sourcesContent":["/**\n * @module Parse\n *\n */\nexport default (async (...Option: Parameters<Interface>) => {\n\tconst Items = new Set<PackagesRowItem>();\n\n\tfor (const Package of Option[0]) {\n\t\tlet GitHub: string | undefined;\n\n\t\ttry {\n\t\t\tif (Match(Package, Regex.GitHub)) {\n\t\t\t\tGitHub =\n\t\t\t\t\ttypeof Package === \"string\"\n\t\t\t\t\t\t? Package.split(\":\")[1]\n\t\t\t\t\t\t: Object.keys(Package).at(0)?.split(\":\")[1];\n\n\t\t\t\tconst Owner = GitHub?.split(\"/\")[0];\n\t\t\t\tconst Repository = GitHub?.split(\"/\")[1];\n\n\t\t\t\tconst JSONGitHub = await Request(`GET /repos/${GitHub}`, {\n\t\t\t\t\towner: Owner,\n\t\t\t\t\trepo: Repository,\n\t\t\t\t});\n\n\t\t\t\tif (JSONGitHub?.data) {\n\t\t\t\t\tItems.add({\n\t\t\t\t\t\tLink: JSONGitHub.data?.html_url ?? \"\",\n\t\t\t\t\t\tName: JSONGitHub.data?.description ?? \"\",\n\t\t\t\t\t\tGitHub: JSONGitHub.data?.full_name ?? \"\",\n\t\t\t\t\t\tBadge: new Set<Badge>([\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tLink: `HTTPS://GitHub.Com/${Owner}/${Repository}`,\n\t\t\t\t\t\t\t\tImage: `https://img.shields.io/github/last-commit/${Owner}/${Repository}?label=Update`,\n\t\t\t\t\t\t\t\tAlt: \"Update\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tLink: `HTTPS://GitHub.Com/${Owner}/${Repository}`,\n\t\t\t\t\t\t\t\tImage: `https://img.shields.io/github/issues/${Owner}/${Repository}?label=Issue`,\n\t\t\t\t\t\t\t\tAlt: \"Issue\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tLink: `HTTPS://GitHub.Com/${Owner}/${Repository}`,\n\t\t\t\t\t\t\t\tImage: `https://img.shields.io/github/downloads/${Owner}/${Repository}/total?label=Download`,\n\t\t\t\t\t\t\t\tAlt: \"Download\",\n\t\t\t\t\t\t\t\tFloat: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (_Error) {\n\t\t\tconsole.log(`Package GitHub: ${Package}`);\n\t\t\tconsole.log(_Error);\n\t\t}\n\n\t\ttry {\n\t\t\tif (Match(Package, Regex.NPM)) {\n\t\t\t\tconst NPM =\n\t\t\t\t\ttypeof Package === \"string\"\n\t\t\t\t\t\t? Package.split(\":\")[1]\n\t\t\t\t\t\t: Object.keys(Package).at(0)?.split(\":\")[1];\n\n\t\t\t\tconst JSONNPM = await (\n\t\t\t\t\tawait fetch(`HTTPS://Registry.NPMJS.Org/${NPM}`)\n\t\t\t\t).json();\n\n\t\t\t\tGitHub = (JSONNPM?.repository?.url ?? \"\")\n\t\t\t\t\t?.replace(Regex.GitHubURL, \"\")\n\t\t\t\t\t?.replace(\"#readme\", \"\")\n\t\t\t\t\t?.replace(\".git\", \"\");\n\n\t\t\t\tItems.add({\n\t\t\t\t\tLink: `HTTPS://GitHub.Com/${GitHub}`,\n\t\t\t\t\tName: JSONNPM?.description ?? \"\",\n\t\t\t\t\tGitHub,\n\t\t\t\t\tBadge: new Set<Badge>([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tImage: `https://img.shields.io/github/actions/workflow/status/${GitHub}/Node.yml?branch=main&label=Build&logo=node.js`,\n\t\t\t\t\t\t\tLink: `HTTPS://GitHub.Com/${GitHub}/actions/workflows/Node.yml`,\n\t\t\t\t\t\t\tAlt: \"Build\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLink: `HTTPS://NPMJS.Org/${JSONNPM.name}?activeTab=dependencies`,\n\t\t\t\t\t\t\tImage: `https://img.shields.io/librariesio/release/npm/${JSONNPM.name}?logo=dependabot&label=`,\n\t\t\t\t\t\t\tAlt: \"Dependency\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLink: `HTTPS://NPMJS.Org/${JSONNPM.name}`,\n\t\t\t\t\t\t\tImage: `https://img.shields.io/npm/v/${JSONNPM.name}?label=Version&logo=npm`,\n\t\t\t\t\t\t\tAlt: \"Version\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLink: `HTTPS://NPMJS.Org/${JSONNPM.name}`,\n\t\t\t\t\t\t\tImage: `https://img.shields.io/npm/dt/${JSONNPM.name}?label=Download&logo=npm`,\n\t\t\t\t\t\t\tAlt: \"Download\",\n\n\t\t\t\t\t\t\tFloat: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t]),\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (_Error) {\n\t\t\tconsole.log(`Package NPM: ${Package}`);\n\t\t\tconsole.log(_Error);\n\t\t}\n\n\t\ttry {\n\t\t\tif (Match(Package, Regex.cargo)) {\n\t\t\t\tconst Crate =\n\t\t\t\t\ttypeof Package === \"string\"\n\t\t\t\t\t\t? Package.split(\":\")[1]\n\t\t\t\t\t\t: Object.keys(Package).at(0)?.split(\":\")[1];\n\n\t\t\t\tconst JSONCargo = await (\n\t\t\t\t\tawait fetch(`HTTPS://Crates.IO/api/v1/crates/${Crate}`)\n\t\t\t\t).json();\n\n\t\t\t\tGitHub = (JSONCargo?.crate?.repository ?? \"\")\n\t\t\t\t\t?.replace(Regex.GitHubURL, \"\")\n\t\t\t\t\t?.replace(\"#readme\", \"\")\n\t\t\t\t\t?.replace(\".git\", \"\");\n\n\t\t\t\tItems.add({\n\t\t\t\t\tLink: JSONCargo?.crate?.repository ?? \"\",\n\t\t\t\t\tName: JSONCargo?.crate?.description ?? \"\",\n\t\t\t\t\tBadge: new Set<Badge>([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tImage: `https://img.shields.io/github/actions/workflow/status/${GitHub}/Rust.yml?branch=main&label=Build`,\n\t\t\t\t\t\t\tLink: `HTTPS://GitHub.Com/${GitHub}/actions/workflows/Rust.yml`,\n\t\t\t\t\t\t\tAlt: \"Build\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLink: `HTTPS://Crates.IO/crates/${JSONCargo?.crate?.name}`,\n\t\t\t\t\t\t\tImage: `https://img.shields.io/crates/v/${JSONCargo?.crate?.name}?label=Version`,\n\t\t\t\t\t\t\tAlt: \"Version\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLink: `HTTPS://Crates.IO/crates/${JSONCargo?.crate?.name}`,\n\t\t\t\t\t\t\tImage: `https://img.shields.io/crates/d/${JSONCargo?.crate?.name}?label=Download`,\n\t\t\t\t\t\t\tAlt: \"Download\",\n\n\t\t\t\t\t\t\tFloat: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t]),\n\t\t\t\t\tGitHub,\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (_Error) {\n\t\t\tconsole.log(`Package cargo: ${Package}`);\n\t\t\tconsole.log(_Error);\n\t\t}\n\t}\n\n\treturn Items;\n}) satisfies Interface as Interface;\n\nimport type Badge from \"../Interface/Badge.js\";\nimport type PackagesRowItem from \"../Interface/PackagesRowItem.js\";\nimport type Interface from \"../Interface/Parse.js\";\n\nexport const { default: Match } = await import(\"@Function/Match.js\");\n\nexport const { default: Request } = await import(\"@Library/Request\");\n\nexport const Regex = {\n\tGitHub: /GitHub:/,\n\tNPM: /NPM:/,\n\tcargo: /cargo:/,\n\tGitHubURL: /(git\\+)?http?s:\\/\\/github.com\\//,\n};\n"],"names":[],"mappings":"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"}