{"version":3,"file":"index_-vMhpSAW.mjs","sources":["../../node_modules/astro-capo/src/capo/rules.ts","../../node_modules/astro-capo/src/capo/index.ts","../../node_modules/astro-capo/src/Head.ts"],"sourcesContent":["import type { ElementNode } from \"ultrahtml\";\nimport { renderSync } from 'ultrahtml';\n\ntype Attributes = Record<string, string>;\n\nfunction has(value: unknown): value is string {\n    return typeof value === 'string';\n}\nfunction is<T>(a: unknown, b: T): a is T {\n    return a === b;\n}\nfunction any(a: string | undefined, b: string[]): a is string {\n    return has(a) && b.includes(a.toLowerCase());\n}\n\nexport const ElementWeights: Record<string, number> = {\n  META: 10,\n  TITLE: 9,\n  PRECONNECT: 8,\n  ASYNC_SCRIPT: 7,\n  IMPORT_STYLES: 6,\n  SYNC_SCRIPT: 5,\n  SYNC_STYLES: 4,\n  PRELOAD: 3,\n  DEFER_SCRIPT: 2,\n  PREFETCH_PRERENDER: 1,\n  OTHER: 0\n};\n\nexport const ElementDetectors = {\n  META: isMeta,\n  TITLE: isTitle,\n  PRECONNECT: isPreconnect,\n  DEFER_SCRIPT: isDeferScript,\n  ASYNC_SCRIPT: isAsyncScript,\n  IMPORT_STYLES: isImportStyles,\n  SYNC_SCRIPT: isSyncScript,\n  SYNC_STYLES: isSyncStyles,\n  PRELOAD: isPreload,\n  PREFETCH_PRERENDER: isPrefetchPrerender\n}\n\nexport const META_HTTP_EQUIV_KEYWORDS = [\n  'accept-ch',\n  'content-security-policy',\n  'content-type',\n  'default-style',\n  'delegate-ch',\n  'origin-trial',\n  'x-dns-prefetch-control'\n];\n\n// meta:is([charset], ${httpEquivSelector}, [name=viewport]), base\nexport function isMeta(name: string, a: Attributes) {\n  if (name === 'base') return true;\n  if (name !== 'meta') return false;\n  return has(a.charset) || is(a.name, 'viewport') || any(a['http-equiv'], META_HTTP_EQUIV_KEYWORDS)\n}\n\n// title\nexport function isTitle(name: string) {\n  return name === 'title';\n}\n\n// link[rel=preconnect]\nexport function isPreconnect(name: string, { rel }: Attributes) {\n  return name === 'link' && is(rel, 'preconnect');\n}\n\n// script[src][async]\nexport function isAsyncScript(name: string, { src, async }: Attributes) {\n  return name === 'script' && has(src) && has(async);\n}\n\n// style that contains @import\nexport function isImportStyles(name: string, a: Attributes, children: string) {\n  const importRe = /@import/;\n\n  if (name === 'style') {\n    return importRe.test(children);\n  }\n\n  // Can't support external stylesheets on the server\n  return false;\n}\n\n// script:not([src][defer],[src][type=module],[src][async],[type*=json])\nexport function isSyncScript(name: string, { src, defer, async, type = '' }: Attributes) {\n  if (name !== 'script') return false;\n  return !(has(src) && (has(defer) || has(async) || is(type, 'module')) || type.includes('json'))\n}\n\n// link[rel=stylesheet],style\nexport function isSyncStyles(name: string, { rel }: Attributes) {\n  if (name === 'style') return true;\n  return name === 'link' && is(rel, 'stylesheet')\n}\n\n// link:is([rel=preload], [rel=modulepreload])\nexport function isPreload(name: string, { rel }: Attributes) {\n    return name === 'link' && any(rel, ['preload', 'modulepreload']);\n}\n\n// script[src][defer], script:not([src][async])[src][type=module]\nexport function isDeferScript(name: string, { src, defer, async, type }: Attributes) {\n  if (name !== 'script') return false;\n  return (has(src) && has(defer)) || (has(src) && is(type, 'module') && !has(async));\n}\n\n// link:is([rel=prefetch], [rel=dns-prefetch], [rel=prerender])\nexport function isPrefetchPrerender(name: string, { rel }: Attributes) {\n  return name === 'link' && any(rel, ['prefetch', 'dns-prefetch', 'prerender'])\n}\n\n// meta[http-equiv=\"origin-trial\"i]\nexport function isOriginTrial(name: string, { 'http-equiv': http }: Attributes) {\n  return name === 'meta' && is(http, 'origin-trial');\n}\n\n// meta[http-equiv=\"Content-Security-Policy\" i]\nexport function isMetaCSP(name: string, { 'http-equiv': http }: Attributes) {\n  return name === 'meta' && is(http, 'Content-Security-Policy');\n}\n\nexport function getWeight(element: ElementNode) {\n  for (const [id, detector] of Object.entries(ElementDetectors)) {\n    const children = (element.name === 'style' && element.children.length > 0) ? renderSync(element) : '';\n    if (detector(element.name, element.attributes, children)) {\n      return ElementWeights[id];\n    }\n  }\n  return ElementWeights.OTHER;\n}\n","import type { ElementNode } from 'ultrahtml';\nimport { parse, walkSync, renderSync, ELEMENT_NODE } from 'ultrahtml';\nimport { getWeight } from './rules.ts';\n\nexport default function capo(html: string) {\n    const ast = parse(html);\n    try {\n        walkSync(ast, (node, parent, index) => {\n            if (node.type === ELEMENT_NODE && node.name === 'head') {\n                if (parent) {\n                    parent.children.splice(index, 1, getSortedHead(node));\n                    throw 'done' // short-circuit\n                }\n            }\n        })\n    } catch (e) {\n        if (e !== 'done') throw e;\n    }\n    return renderSync(ast);\n}\n\nfunction getSortedHead(head: ElementNode): ElementNode {\n    const weightedChildren = head.children.map((node) => {\n        if (node.type === ELEMENT_NODE) {\n            const weight = getWeight(node);\n            return [weight, node];\n        }\n    }).filter(Boolean) as [number, ElementNode][]\n    const children = weightedChildren.sort((a, b) => b[0] - a[0]).map(([_, element]) => element)\n    return { ...head, children };\n}\n","import type { SSRResult } from \"astro\";\n// @ts-expect-error using astro internals\nimport { renderAllHeadContent } from \"astro/runtime/server/render/head.js\";\n// @ts-expect-error using astro internals\nimport { createComponent, unescapeHTML, renderSlotToString, spreadAttributes } from \"astro/runtime/server/index.js\";\nimport capo from \"./capo/index.ts\";\n\nexport const Head = createComponent({\n    factory: async (result: SSRResult, props: Record<string, any>, slots: Record<string, any>) => {\n        let head = '';\n        head += `<head${spreadAttributes(props)} data-capo>`\n        head += await renderSlotToString(result, slots.default);\n        head += renderAllHeadContent(result);\n        head += '</head>';\n        return unescapeHTML(capo(head));\n    }\n})\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1,2]}