{"version":3,"file":"Parse_rO-QSZie.mjs","sources":["../../Source/Function/Parse.ts"],"sourcesContent":["/**\n * @module Parse\n *\n */\nexport default (async (...Option: Parameters<Type>) => {\n\tconst Items = new Set<PackagesRowItem>();\n\n\tfor (const Package of Option[0]) {\n\t\tlet GitHub = null;\n\n\t\ttry {\n\t\t\tif (Match(Package, /GitHub:/)) {\n\t\t\t\tGitHub =\n\t\t\t\t\ttypeof Package === \"string\"\n\t\t\t\t\t\t? Package.split(\":\")[1]\n\t\t\t\t\t\t: Object.keys(Package).at(0)?.split(\":\")[1];\n\n\t\t\t\tconst Owner = GitHub?.split(\"/\")[0];\n\t\t\t\tconst Repository = GitHub?.split(\"/\")[1];\n\n\t\t\t\tconst JSONGitHub = await Request(`GET /repos/${GitHub}`, {\n\t\t\t\t\towner: Owner,\n\t\t\t\t\trepo: Repository,\n\t\t\t\t});\n\n\t\t\t\tif (JSONGitHub?.data) {\n\t\t\t\t\tItems.add({\n\t\t\t\t\t\tLink: JSONGitHub.data?.html_url ?? \"\",\n\t\t\t\t\t\tName:\n\t\t\t\t\t\t\ttypeof Package === \"object\"\n\t\t\t\t\t\t\t\t? Object.values(Package).at(0)?.Name ??\n\t\t\t\t\t\t\t\t  JSONGitHub.data?.name\n\t\t\t\t\t\t\t\t: JSONGitHub.data?.name ?? \"\",\n\t\t\t\t\t\tGitHub: JSONGitHub.data?.full_name ?? \"\",\n\t\t\t\t\t\tDescription: JSONGitHub.data?.description ?? \"\",\n\t\t\t\t\t\tBadge: new Set([\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tLink: `https://github.com/${Owner}/${Repository}`,\n\t\t\t\t\t\t\t\tImage: `https://img.shields.io/github/last-commit/${Owner}/${Repository}?label=Last%20Updated`,\n\t\t\t\t\t\t\t\tAlt: \"Last Update\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tLink: `https://github.com/${Owner}/${Repository}`,\n\t\t\t\t\t\t\t\tImage: `https://img.shields.io/github/issues/${Owner}/${Repository}?label=Issues`,\n\t\t\t\t\t\t\t\tAlt: \"Issues\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tLink: `https://github.com/${Owner}/${Repository}`,\n\t\t\t\t\t\t\t\tImage: `https://img.shields.io/github/downloads/${Owner}/${Repository}/total?label=Downloads`,\n\t\t\t\t\t\t\t\tAlt: \"Downloads\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Match(Package, /NPM:/)) {\n\t\t\t\tconst NPM =\n\t\t\t\t\ttypeof Package === \"string\"\n\t\t\t\t\t\t? Package.split(\":\")[1]\n\t\t\t\t\t\t: Object.keys(Package).at(0)?.split(\":\")[1];\n\n\t\t\t\tconst JSONNPM = await (\n\t\t\t\t\tawait fetch(`https://registry.npmjs.org/${NPM}`)\n\t\t\t\t).json();\n\n\t\t\t\tGitHub = (JSONNPM?.repository?.url ?? \"\")\n\t\t\t\t\t?.replace(/(git\\+)?http?s:\\/\\/github.com\\//, \"\")\n\t\t\t\t\t?.replace(\"#readme\", \"\")\n\t\t\t\t\t?.replace(\".git\", \"\");\n\n\t\t\t\tItems.add({\n\t\t\t\t\tLink: `https://github.com/${GitHub}`,\n\t\t\t\t\tName:\n\t\t\t\t\t\ttypeof Package === \"object\"\n\t\t\t\t\t\t\t? Object.values(Package).at(0)?.Name ??\n\t\t\t\t\t\t\t  GitHub.split(\"/\")[1]\n\t\t\t\t\t\t\t: GitHub.split(\"/\")[1] ?? \"\",\n\t\t\t\t\tGitHub,\n\t\t\t\t\tDescription: JSONNPM?.description ?? \"\",\n\t\t\t\t\tBadge: new Set([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tImage: `https://img.shields.io/github/actions/workflow/status/${GitHub}/Node.yml?branch=main&label=Build&logo=node.js`,\n\t\t\t\t\t\t\tLink: `https://github.com/${GitHub}/actions/workflows/Node.yml`,\n\t\t\t\t\t\t\tAlt: \"Build\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLink: `https://npmjs.org/${JSONNPM.name}?activeTab=dependencies`,\n\t\t\t\t\t\t\tImage: `https://img.shields.io/librariesio/release/npm/${JSONNPM.name}?logo=dependabot&label=`,\n\t\t\t\t\t\t\tAlt: \"Dependencies\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLink: `https://npmjs.org/${JSONNPM.name}`,\n\t\t\t\t\t\t\tImage: `https://img.shields.io/npm/v/${JSONNPM.name}?label=Version&logo=npm`,\n\t\t\t\t\t\t\tAlt: \"Version\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLink: `https://npmjs.org/${JSONNPM.name}`,\n\t\t\t\t\t\t\tImage: `https://img.shields.io/npm/dt/${JSONNPM.name}?label=Downloads&logo=npm`,\n\t\t\t\t\t\t\tAlt: \"Downloads\",\n\t\t\t\t\t\t},\n\t\t\t\t\t]),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (Match(Package, /cargo:/)) {\n\t\t\t\tconst Crate =\n\t\t\t\t\ttypeof Package === \"string\"\n\t\t\t\t\t\t? Package.split(\":\")[1]\n\t\t\t\t\t\t: Object.keys(Package)\n\t\t\t\t\t\t\t\t.entries()\n\t\t\t\t\t\t\t\t.next()\n\t\t\t\t\t\t\t\t.value.split(\":\")[1];\n\n\t\t\t\tconst JSONCargo = await (\n\t\t\t\t\tawait fetch(`https://crates.io/api/v1/crates/${Crate}`)\n\t\t\t\t).json();\n\n\t\t\t\tGitHub = (JSONCargo?.crate?.repository ?? \"\")\n\t\t\t\t\t?.replace(/(git\\+)?http?s:\\/\\/github.com\\//, \"\")\n\t\t\t\t\t?.replace(\"#readme\", \"\")\n\t\t\t\t\t?.replace(\".git\", \"\");\n\n\t\t\t\tItems.add({\n\t\t\t\t\tLink: JSONCargo?.crate?.repository ?? \"\",\n\t\t\t\t\tName:\n\t\t\t\t\t\ttypeof Package === \"object\"\n\t\t\t\t\t\t\t? Object.values(Package).at(0)?.Name ??\n\t\t\t\t\t\t\t  JSONCargo?.crate?.name\n\t\t\t\t\t\t\t: JSONCargo?.crate?.name ?? \"\",\n\t\t\t\t\tBadge: new Set([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tImage: `https://img.shields.io/github/actions/workflow/status/${GitHub}/Rust.yml?branch=main&label=Build`,\n\t\t\t\t\t\t\tLink: `https://github.com/${GitHub}/actions/workflows/Rust.yml`,\n\t\t\t\t\t\t\tAlt: \"Build\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLink: `https://crates.io/${JSONCargo?.crate?.name}`,\n\t\t\t\t\t\t\tImage: `https://img.shields.io/crates/v/${JSONCargo?.crate?.name}?label=Version`,\n\t\t\t\t\t\t\tAlt: \"Version\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLink: `https://crates.io/${JSONCargo?.crate?.name}`,\n\t\t\t\t\t\t\tImage: `https://img.shields.io/crates/d/${JSONCargo?.crate?.name}?label=Downloads`,\n\t\t\t\t\t\t\tAlt: \"Downloads\",\n\t\t\t\t\t\t},\n\t\t\t\t\t]),\n\t\t\t\t\tDescription: JSONCargo?.crate?.description ?? \"\",\n\t\t\t\t\tGitHub,\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (_Error) {\n\t\t\tconsole.log(`Package: ${Package}`);\n\t\t\tconsole.log(_Error);\n\t\t}\n\t}\n\n\treturn Items;\n}) satisfies Type as Type;\n\nimport type PackagesRowItem from \"@Interface/PackagesRowItem\";\nimport type Type from \"@Interface/Parse.js\";\n\nexport const { default: Match } = await import(\"@Function/Match.js\");\n\nexport const { default: Request } = await import(\"@Library/Request\");\n"],"names":[],"mappings":"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"}