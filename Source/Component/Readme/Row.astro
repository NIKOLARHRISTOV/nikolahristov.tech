---
import type PackageCell from "../../Type/Cell.js";
import Badge, { Dark, Light } from "@Component/Readme/Badge.astro";

export const { default: Icon } = await import("@Option/Icon.js");
export const { default: Parse } = await import("@Function/Parse.js");

interface Props {
	Package: Set<PackageCell>;
}

const Items = await Parse(Astro.props.Package);
---

{
	[...(await import("@Library/Chunks")).default(Array.from(Items), 2)].map(
		(Row) =>
			Row && (
				<tr>
					{Row.map((Package) => {
						let Span = Row.length > 1 ? 2 : 3;
						let Length = Array.from(Package.Badge).filter(
							(Badge) => !Badge.Float,
						).length;

						Span -= Length >= 1 ? 1 : 0;

						return (
							<>
								{Length >= 1 ? (
									<td valign="top" colspan={Span}>
										<br />

										{Array.from(Package.Badge)
											.filter((Badge) => !Badge.Float)
											.map((_Badge) => (
												<>
													<Badge Badge={_Badge} />

													<br />
												</>
											))}

										<br />
									</td>
								) : (
									""
								)}

								<td valign="top" colspan={Span}>
									<br />

									<a href={Package.Link} target="_blank">
										<picture>
											<source
												media="(prefers-color-scheme: dark)"
												srcset={`https://img.shields.io/github/stars/${Package.GitHub}?style=flat&label=Star&logo=github${Dark}`}
											/>
											<source
												media="(prefers-color-scheme: light)"
												srcset={`https://img.shields.io/github/stars/${Package.GitHub}?style=flat&label=Star&logo=github${Light}`}
											/>
											<img
												src={`https://img.shields.io/github/stars/${Package.GitHub}?style=flat&label=Star&logo=github${Dark}`}
												alt="Star"
											/>
										</picture>
									</a>

									<br />

									{Array.from(Package.Badge)
										.filter((Badge) => Badge.Float)
										.map((_Badge) => (
											<>
												<Badge Badge={_Badge} />

												<br />
											</>
										))}

									<a href={Package.Link} target="_blank">
										<b>{Package.Name}</b>
									</a>

									<br />
								</td>
							</>
						);
					})}
				</tr>
			),
	)
}
